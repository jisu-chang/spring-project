<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mbc.pet.quiz.QuizService">
<!-- 퀴즈 등록 -->
<insert id="insertQuiz">
	insert into quiz values(quiznum_seq.nextval, #{quiz_question}, #{quiz_option1}, #{quiz_option2}, 
	#{quiz_option3}, #{quiz_option4}, #{quiz_answer})
</insert>

<!-- 랜덤 퀴즈 가져오기 -->
<select id="getRandomQuiz" resultType="com.mbc.pet.quiz.QuizDTO">
	select * from (select quiz_id, quiz_question, quiz_option1, quiz_option2, quiz_option3, quiz_option4, quiz_answer 
    from quiz order by dbms_random.value) where rownum = 1
</select>

<!-- 퀴즈 아이디로 퀴즈 가져오기 -->
<select id="getQuizId" parameterType="int" resultType="com.mbc.pet.quiz.QuizDTO">
	select quiz_id, quiz_option1, quiz_option2, quiz_option3, quiz_option4,  quiz_question, quiz_answer
	from quiz where quiz_id = #{quiz_id}
</select>

<!-- 퀴즈 결과 저장 -->
<insert id="insertQuizResult" parameterType="com.mbc.pet.quiz.QuizResultDTO">
    insert into quiz_result
    (result_id, result_score, result_rank, result_time, user_id, quiz_id, get_grape)
    values (quiz_result_seq.NEXTVAL, #{result_score}, #{result_rank}, #{result_time},
    #{user_id}, #{quiz_id}, #{get_grape})
</insert>

<!-- 퀴즈 푸는 시간으로 순위 정하기 -->
<select id="time_rank" resultType="int">
	select result_rank from
	  (select user_id, rank() over(order by result_time asc) 
	  as result_rank
	  from quiz_result where quiz_id=#{quiz_id})
	where user_id = #{user_id}
</select>

<!-- 퀴즈 전체 순위 중 top10 봅기 -->
<select id="top10rank" resultType="com.mbc.pet.quiz.QuizResultDTO">
	select * from(select qr.user_id, u.user_login_id, qr.quiz_id, qr.result_time,
      qr.result_score, qr.get_grape, 
      rank() over(order by qr.result_time asc) as result_rank
	  from quiz_result qr join user1 u
	  on qr.user_id = u.user_id where qr.quiz_id=#{quiz_id})
	where rownum &lt;=10
	<!-- "<" 기호는 "&lt;"와 동일  -->
</select>

<!-- 아직 풀지 않은 문제 랜덤 출력 -->
<select id="UnsolvedQuiz" resultType="com.mbc.pet.quiz.QuizDTO">
	select * from (select * from quiz where quiz_id not in(select quiz_id from quiz_result where user_id = #{user_id})
	order by dbms_random.value) where rownum = 1
</select>

<!-- 이미 푼 문제인지 확인 -->
<select id="checkAlreadySolved" resultType="boolean">
	select case when count(*) > 0 then 1 else 0 end
	from quiz_result where user_id = #{user_id} and quiz_id = #{quiz_id}
</select>

<!-- 메인화면 안푼 퀴즈 가져오기 -->
<select id="getLatestUnsolvedQuiz" resultType="com.mbc.pet.quiz.QuizDTO">
	select * from 
		(select * from quiz 
		where quiz_id not in (
			select quiz_id from quiz_result where user_id = #{user_id} )
		order by quiz_id desc
		)
	where rownum = 1
</select>

<select id="getQuizCount" resultType="int">
    SELECT COUNT(*) FROM quiz
</select>

<select id="getQuizListByPage" resultType="com.mbc.pet.quiz.QuizDTO">
    SELECT * FROM (
        SELECT q.*, ROWNUM rn FROM (
            SELECT * FROM quiz ORDER BY quiz_id DESC
        ) q
        WHERE ROWNUM &lt;= #{end}
    )
    WHERE rn &gt; #{start}
</select>

<!-- 퀴즈 하나 조회 -->
<select id="getQuizById" parameterType="int" resultType="com.mbc.pet.quiz.QuizDTO">
    SELECT * FROM quiz WHERE quiz_id = #{quiz_id}
</select>

<!-- 퀴즈 수정 -->
<update id="updateQuiz" parameterType="com.mbc.pet.quiz.QuizDTO">
    UPDATE quiz SET 
        quiz_question = #{quiz_question},
        quiz_option1 = #{quiz_option1},
        quiz_option2 = #{quiz_option2},
        quiz_option3 = #{quiz_option3},
        quiz_option4 = #{quiz_option4},
        quiz_answer = #{quiz_answer}
    WHERE quiz_id = #{quiz_id}
</update>

<!-- 퀴즈 삭제 -->
<delete id="deleteQuiz" parameterType="int">
    DELETE FROM quiz WHERE quiz_id = #{quiz_id}
</delete>
</mapper>